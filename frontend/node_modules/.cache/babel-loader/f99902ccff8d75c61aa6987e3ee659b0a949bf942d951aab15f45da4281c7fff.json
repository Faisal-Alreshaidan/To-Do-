{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FAISA\\\\OneDrive\\\\Desktop\\\\CS336\\\\lab9-FaisalAziz1241\\\\frontend\\\\src\\\\components\\\\Weather\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Weather.css'; // Make sure you have the CSS file with the necessary styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = 'NZFg01GFjycMlynXdI9PhAssjfKPnmeA'; // Replace with your actual API key\n\n  const fetchWeather = async () => {\n    try {\n      const response = await axios.get(`https://api.tomorrow.io/v4/timelines?location=${city}&fields=temperature,windSpeed,humidity,weatherCode&timesteps=current&apikey=${API_KEY}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const formatDateTime = timestamp => {\n    const date = new Date(timestamp);\n    return {\n      date: `${date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      })}`,\n      time: `${date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }).toLowerCase()}`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter city\",\n      className: \"city-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      className: \"fetch-button\",\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: formatDateTime(weatherData.data.timelines[0].startTime).date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: formatDateTime(weatherData.data.timelines[0].startTime).time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: [weatherData.data.timelines[0].intervals[0].values.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city\",\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: \"Overcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"humidity\",\n          children: [\"Humidity: \", weatherData.data.timelines[0].intervals[0].values.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wind\",\n          children: [\"Wind: \", weatherData.data.timelines[0].intervals[0].values.windSpeed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"VEbM+LXFX5np38azcd69T0ntHU4=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Weather","_s","city","setCity","weatherData","setWeatherData","API_KEY","fetchWeather","response","get","data","error","console","formatDateTime","timestamp","date","Date","toLocaleDateString","month","day","time","toLocaleTimeString","hour","minute","toLowerCase","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","timelines","startTime","intervals","values","temperature","humidity","windSpeed","_c","$RefreshReg$"],"sources":["C:/Users/FAISA/OneDrive/Desktop/CS336/lab9-FaisalAziz1241/frontend/src/components/Weather/Weather.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Weather.css'; // Make sure you have the CSS file with the necessary styles\r\n\r\nconst Weather = () => {\r\n  const [city, setCity] = useState('');\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const API_KEY = 'NZFg01GFjycMlynXdI9PhAssjfKPnmeA'; // Replace with your actual API key\r\n\r\n  const fetchWeather = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.tomorrow.io/v4/timelines?location=${city}&fields=temperature,windSpeed,humidity,weatherCode&timesteps=current&apikey=${API_KEY}`\r\n      );\r\n      setWeatherData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n    }\r\n  };\r\n\r\n  const formatDateTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return {\r\n      date: `${date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}`,\r\n      time: `${date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }).toLowerCase()}`\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className='weather-card'>\r\n      <input\r\n        type=\"text\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n        placeholder=\"Enter city\"\r\n        className=\"city-input\"\r\n      />\r\n      <button onClick={fetchWeather} className=\"fetch-button\">Get Weather</button>\r\n      {weatherData && (\r\n        <div>\r\n          <div className=\"date-time\">\r\n            {/* Assuming you get the timestamp from the API data */}\r\n            <div className=\"date\">{formatDateTime(weatherData.data.timelines[0].startTime).date}</div>\r\n            <div className=\"time\">{formatDateTime(weatherData.data.timelines[0].startTime).time}</div>\r\n          </div>\r\n          <div className=\"temperature\">\r\n            {weatherData.data.timelines[0].intervals[0].values.temperature}Â°C\r\n          </div>\r\n          <div className=\"city\">\r\n            {city}\r\n          </div>\r\n          <div className=\"weather-info\">\r\n            {/* Assuming weatherCode maps correctly to your weather conditions */}\r\n            <div className=\"description\">Overcast</div>\r\n            <div className=\"humidity\">Humidity: {weatherData.data.timelines[0].intervals[0].values.humidity}%</div>\r\n            <div className=\"wind\">Wind: {weatherData.data.timelines[0].intervals[0].values.windSpeed} km/h</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}