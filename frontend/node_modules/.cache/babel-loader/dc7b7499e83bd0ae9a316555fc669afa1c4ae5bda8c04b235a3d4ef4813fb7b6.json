{"ast":null,"code":"var _jsxFileName = \"/Users/porterrunyon-trapp/CS333/final-project/Final-cs333/frontend/src/components/Todo/TodoInput.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Renders an input field for a todo item.\n * \n * @param {Object} props - The component props.\n * @param {string} props.title - The title of the todo item.\n * @param {function} props.handleInputChange - The event handler for input change.\n * @returns {JSX.Element} The rendered input field.\n */\nexport function TodoInput({\n  title,\n  handleInputChange\n}) {\n  /**\n   * Handles the onFocus event for the input element.\n   * Selects the text in the input element.\n   *\n   * @param {Event} e - The onFocus event object.\n   * @returns {void}\n   */\n  const handleOnFocus = e => {\n    e.target.select();\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    autoFocus: true,\n    type: \"text\",\n    value: title,\n    onChange: handleInputChange,\n    onFocus: handleOnFocus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["TodoInput","title","handleInputChange","handleOnFocus","e","target","select","_jsxDEV","autoFocus","type","value","onChange","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/porterrunyon-trapp/CS333/final-project/Final-cs333/frontend/src/components/Todo/TodoInput.jsx"],"sourcesContent":["\n/**\n * Renders an input field for a todo item.\n * \n * @param {Object} props - The component props.\n * @param {string} props.title - The title of the todo item.\n * @param {function} props.handleInputChange - The event handler for input change.\n * @returns {JSX.Element} The rendered input field.\n */\nexport function TodoInput({ title, handleInputChange }) {\n\n  /**\n   * Handles the onFocus event for the input element.\n   * Selects the text in the input element.\n   *\n   * @param {Event} e - The onFocus event object.\n   * @returns {void}\n   */\n  const handleOnFocus = (e) => {\n    e.target.select();\n  }\n\n  return (\n    <input \n      autoFocus \n      type=\"text\" \n      value={title} \n      onChange={handleInputChange} \n      onFocus={handleOnFocus} \n    />\n  )\n}"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAkB,CAAC,EAAE;EAEtD;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC;EACnB,CAAC;EAED,oBACEC,OAAA;IACEC,SAAS;IACTC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAET,KAAM;IACbU,QAAQ,EAAET,iBAAkB;IAC5BU,OAAO,EAAET;EAAc;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN;AAACC,EAAA,GAtBejB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}