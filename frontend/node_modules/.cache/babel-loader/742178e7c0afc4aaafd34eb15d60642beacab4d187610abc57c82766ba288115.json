{"ast":null,"code":"import{useCallback,useEffect,useState}from'react';import{Todo}from'../Todo/Todo';import{CreateTodo}from'./CreateTodo';/**\r\n * Renders the Todos component.\r\n * @returns {JSX.Element} The rendered Todos component.\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Todos=()=>{const[todoIds,setTodoIds]=useState([]);/**\r\n   * Fetches data from the specified URL and sets the todo IDs.\r\n   * @returns {Promise<void>} A promise that resolves when the data is fetched and the todo IDs are set.\r\n   */const fetchData=useCallback(async()=>{try{const response=await fetch('http://localhost:3000');const jsonResponse=await response.json();setTodoIds(jsonResponse);}catch(error){console.log(error);}},[]);/**\r\n   * Handles the creation of a new todo.\r\n   * @param {Object} newTodo - The new todo object to be created.\r\n   * @returns {Promise<void>} - A promise that resolves when the creation is complete.\r\n   */const handleCreate=useCallback(async newTodo=>{try{await fetch(\"http://localhost:3000\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newTodo)});}catch(error){console.log(error);}await fetchData();},[fetchData]);// intial fetch\nuseEffect(()=>{fetchData();},[fetchData]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CreateTodo,{handleCreate:handleCreate}),todoIds.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No todos to display\"}),/*#__PURE__*/_jsx(\"ul\",{children:todoIds.map(todo=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Todo,{id:todo._id,fetchData:fetchData})},todo._id))})]});};/* CHALLENGE: Add a the sum of remaining todos to a footer. */export default Todos;","map":{"version":3,"names":["useCallback","useEffect","useState","Todo","CreateTodo","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Todos","todoIds","setTodoIds","fetchData","response","fetch","jsonResponse","json","error","console","log","handleCreate","newTodo","method","headers","body","JSON","stringify","children","length","map","todo","id","_id"],"sources":["C:/Users/FAISA/OneDrive/Desktop/CS336/lab9-FaisalAziz1241/frontend/src/components/Todos/Todos.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { Todo } from '../Todo/Todo'\r\nimport { CreateTodo } from './CreateTodo'\r\n\r\n/**\r\n * Renders the Todos component.\r\n * @returns {JSX.Element} The rendered Todos component.\r\n */\r\nconst Todos = () => {\r\n  const [ todoIds, setTodoIds ] = useState([])\r\n\r\n  /**\r\n   * Fetches data from the specified URL and sets the todo IDs.\r\n   * @returns {Promise<void>} A promise that resolves when the data is fetched and the todo IDs are set.\r\n   */\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000')\r\n      const jsonResponse = await response.json()\r\n      setTodoIds(jsonResponse)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },[])\r\n\r\n  /**\r\n   * Handles the creation of a new todo.\r\n   * @param {Object} newTodo - The new todo object to be created.\r\n   * @returns {Promise<void>} - A promise that resolves when the creation is complete.\r\n   */\r\n  const handleCreate = useCallback(async (newTodo) => {\r\n    try {\r\n      await fetch(\"http://localhost:3000\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newTodo),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    await fetchData();\r\n  }, [fetchData]);\r\n\r\n  // intial fetch\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[fetchData])\r\n\r\n  return (\r\n    <>\r\n      <CreateTodo handleCreate={handleCreate} />\r\n      {todoIds.length === 0 && <p>No todos to display</p>}\r\n      <ul>\r\n        {todoIds.map(todo => (\r\n          <li key={todo._id}>\r\n            <Todo id={todo._id} fetchData={fetchData} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\n/* CHALLENGE: Add a the sum of remaining todos to a footer. */\r\n\r\nexport default Todos\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAExD,OAASC,IAAI,KAAQ,cAAc,CACnC,OAASC,UAAU,KAAQ,cAAc,CAEzC;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIA,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAAEC,OAAO,CAAEC,UAAU,CAAE,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACF;AACA;AACA,KACE,KAAM,CAAAY,SAAS,CAAGd,WAAW,CAAC,SAAY,CACxC,GAAI,CACF,KAAM,CAAAe,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CACrD,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC1CL,UAAU,CAACI,YAAY,CAAC,CAC1B,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACF,CAAC,CAAC,EAAE,CAAC,CAEL;AACF;AACA;AACA;AACA,KACE,KAAM,CAAAG,YAAY,CAAGtB,WAAW,CAAC,KAAO,CAAAuB,OAAO,EAAK,CAClD,GAAI,CACF,KAAM,CAAAP,KAAK,CAAC,uBAAuB,CAAE,CACnCQ,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAC9B,CAAC,CAAC,CACJ,CAAE,MAAOJ,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACA,KAAM,CAAAL,SAAS,CAAC,CAAC,CACnB,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf;AACAb,SAAS,CAAC,IAAM,CACda,SAAS,CAAC,CAAC,CACb,CAAC,CAAC,CAACA,SAAS,CAAC,CAAC,CAEd,mBACEJ,KAAA,CAAAF,SAAA,EAAAqB,QAAA,eACEvB,IAAA,CAACF,UAAU,EAACkB,YAAY,CAAEA,YAAa,CAAE,CAAC,CACzCV,OAAO,CAACkB,MAAM,GAAK,CAAC,eAAIxB,IAAA,MAAAuB,QAAA,CAAG,qBAAmB,CAAG,CAAC,cACnDvB,IAAA,OAAAuB,QAAA,CACGjB,OAAO,CAACmB,GAAG,CAACC,IAAI,eACf1B,IAAA,OAAAuB,QAAA,cACEvB,IAAA,CAACH,IAAI,EAAC8B,EAAE,CAAED,IAAI,CAACE,GAAI,CAACpB,SAAS,CAAEA,SAAU,CAAE,CAAC,EADrCkB,IAAI,CAACE,GAEV,CACL,CAAC,CACA,CAAC,EACL,CAAC,CAEP,CAAC,CAED,8DAEA,cAAe,CAAAvB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}