{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FAISA\\\\OneDrive\\\\Desktop\\\\CS336\\\\lab9-FaisalAziz1241\\\\frontend\\\\src\\\\components\\\\Weather\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = 'NZFg01GFjycMlynXdI9PhAssjfKPnmeA';\n  useEffect(() => {\n    const fetchWeatherByLocation = async (latitude, longitude) => {\n      try {\n        const response = await axios.get(`https://api.tomorrow.io/v4/timelines?location=${latitude},${longitude}&fields=temperature&timesteps=current&apikey=${API_KEY}`);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    // Get user's geolocation\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeatherByLocation(latitude, longitude);\n      }, error => {\n        console.error('Error getting geolocation:', error);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.data.timelines[0].intervals[0].values.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","API_KEY","fetchWeatherByLocation","latitude","longitude","response","get","data","error","console","navigator","geolocation","getCurrentPosition","position","coords","children","fileName","_jsxFileName","lineNumber","columnNumber","timelines","intervals","values","temperature","_c","$RefreshReg$"],"sources":["C:/Users/FAISA/OneDrive/Desktop/CS336/lab9-FaisalAziz1241/frontend/src/components/Weather/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Weather = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const API_KEY = 'NZFg01GFjycMlynXdI9PhAssjfKPnmeA';\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherByLocation = async (latitude, longitude) => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.tomorrow.io/v4/timelines?location=${latitude},${longitude}&fields=temperature&timesteps=current&apikey=${API_KEY}`\r\n        );\r\n        setWeatherData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching weather data:', error);\r\n      }\r\n    };\r\n\r\n    // Get user's geolocation\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        fetchWeatherByLocation(latitude, longitude);\r\n      }, (error) => {\r\n        console.error('Error getting geolocation:', error);\r\n      });\r\n    } else {\r\n      console.error('Geolocation is not supported by this browser.');\r\n    }\r\n  }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n  return (\r\n    <div>\r\n      {weatherData && (\r\n        <div>\r\n          <h2>Current Weather</h2>\r\n          <p>Temperature: {weatherData.data.timelines[0].intervals[0].values.temperature}Â°C</p>\r\n          {/* Add more weather information here */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMS,OAAO,GAAG,kCAAkC;EAElDR,SAAS,CAAC,MAAM;IACd,MAAMS,sBAAsB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;MAC5D,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC7B,iDAAgDH,QAAS,IAAGC,SAAU,gDAA+CH,OAAQ,EAChI,CAAC;QACDD,cAAc,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;;IAED;IACA,IAAIE,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;QACrD,MAAM;UAAEV,QAAQ;UAAEC;QAAU,CAAC,GAAGS,QAAQ,CAACC,MAAM;QAC/CZ,sBAAsB,CAACC,QAAQ,EAAEC,SAAS,CAAC;MAC7C,CAAC,EAAGI,KAAK,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAAmB,QAAA,EACGhB,WAAW,iBACVH,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBvB,OAAA;QAAAmB,QAAA,GAAG,eAAa,EAAChB,WAAW,CAACQ,IAAI,CAACa,SAAS,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,WAAW,EAAC,OAAE;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElF;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxCID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}