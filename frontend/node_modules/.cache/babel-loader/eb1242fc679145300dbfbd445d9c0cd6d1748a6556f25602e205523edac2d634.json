{"ast":null,"code":"var _jsxFileName = \"/Users/porterrunyon-trapp/CS333/final-project/Final-cs333/frontend/src/components/Todo/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TodoInput } from './TodoInput';\nimport { TodoTitle } from './TodoTitle';\nimport { TodoCheckbox } from './TodoCheckbox';\nimport { Button } from '../common/Button';\n\n/**\n * Renders a Todo component.\n *\n * @param {Object} props - The component props.\n * @param {string} props.id - The ID of the todo.\n * @param {Function} props.fetchData - The function to re-fetch todos.\n * @returns {JSX.Element} The rendered Todo component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todo({\n  id,\n  fetchData\n}) {\n  _s();\n  const [todo, setTodo] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [tempTitle, setTempTitle] = useState('');\n  const [completed, setCompleted] = useState(false); // New state for completion status\n\n  // Additional state for priority\n  const [tempPriority, setTempPriority] = useState('medium'); // Initial state for priority\n\n  // intial fetch\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/${id}`);\n        const jsonResponse = await response.json();\n        setTodo(jsonResponse);\n        setTempTitle(jsonResponse.title);\n        // Set priority if available, otherwise set to default 'medium'\n        setTempPriority(jsonResponse.priority || 'medium');\n        // Set completion status\n        setCompleted(jsonResponse.isCompleted || false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [id]);\n\n  /**\n   * Handles the change event of the input element.\n   * @param {Object} e - The event object.\n   */\n  const handleInputChange = e => {\n    setTempTitle(e.target.value);\n  };\n\n  /**\n   * Handles the edit functionality.\n   */\n  async function handleEditClick() {\n    if (isEdit) {\n      await handleUpdate({\n        title: tempTitle,\n        priority: tempPriority,\n        isCompleted: completed\n      }); // Include completion status when updating\n    }\n    setIsEdit(!isEdit);\n  }\n\n  /**\n   * Handles the delete action for a todo item.\n   */\n  async function handleDelete() {\n    try {\n      await fetch(`http://localhost:3000/${id}`, {\n        method: 'DELETE'\n      });\n      await fetchData(); // refetch data as the todo item is deleted\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Updates the todo item with the provided data.\n   * @param {object} updatedTodo - The updated todo object.\n   * @returns {Promise<void>} - A promise that resolves when the update is complete.\n   */\n  async function handleUpdate(updatedTodo) {\n    try {\n      await fetch(`http://localhost:3000/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedTodo)\n      });\n      setTodo({\n        ...todo,\n        ...updatedTodo\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo ${completed ? 'completed' : ''}`,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo__items\",\n      children: [/*#__PURE__*/_jsxDEV(TodoCheckbox, {\n        isCompleted: todo === null || todo === void 0 ? void 0 : todo.isCompleted,\n        handleUpdate: value => {\n          setCompleted(value); // Update completion status\n          handleUpdate({\n            ...todo,\n            isCompleted: value\n          }); // Update todo item with completion status\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), isEdit ? /*#__PURE__*/_jsxDEV(TodoInput, {\n        title: tempTitle,\n        handleInputChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TodoTitle, {\n        title: todo === null || todo === void 0 ? void 0 : todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), isEdit || /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `priority ${tempPriority}`,\n        children: [\"Priority: \", tempPriority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: isEdit ? 'btn-success' : 'btn-info',\n        onClick: handleEditClick,\n        children: isEdit ? 'Submit' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-danger\",\n        onClick: handleDelete,\n        disabled: isEdit,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"MJGwZRD+Qdp2rM4RjlT6uof0kqA=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","TodoInput","TodoTitle","TodoCheckbox","Button","jsxDEV","_jsxDEV","Todo","id","fetchData","_s","todo","setTodo","isEdit","setIsEdit","tempTitle","setTempTitle","completed","setCompleted","tempPriority","setTempPriority","response","fetch","jsonResponse","json","title","priority","isCompleted","error","console","log","handleInputChange","e","target","value","handleEditClick","handleUpdate","handleDelete","method","updatedTodo","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/porterrunyon-trapp/CS333/final-project/Final-cs333/frontend/src/components/Todo/Todo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TodoInput } from './TodoInput';\nimport { TodoTitle } from './TodoTitle';\nimport { TodoCheckbox } from './TodoCheckbox';\nimport { Button } from '../common/Button';\n\n/**\n * Renders a Todo component.\n *\n * @param {Object} props - The component props.\n * @param {string} props.id - The ID of the todo.\n * @param {Function} props.fetchData - The function to re-fetch todos.\n * @returns {JSX.Element} The rendered Todo component.\n */\nexport function Todo({ id, fetchData }) {\n  const [todo, setTodo] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [tempTitle, setTempTitle] = useState('');\n  const [completed, setCompleted] = useState(false); // New state for completion status\n\n  // Additional state for priority\n  const [tempPriority, setTempPriority] = useState('medium'); // Initial state for priority\n\n  // intial fetch\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/${id}`);\n        const jsonResponse = await response.json();\n        setTodo(jsonResponse);\n        setTempTitle(jsonResponse.title);\n        // Set priority if available, otherwise set to default 'medium'\n        setTempPriority(jsonResponse.priority || 'medium');\n        // Set completion status\n        setCompleted(jsonResponse.isCompleted || false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [id]);\n\n  /**\n   * Handles the change event of the input element.\n   * @param {Object} e - The event object.\n   */\n  const handleInputChange = (e) => {\n    setTempTitle(e.target.value);\n  };\n\n  /**\n   * Handles the edit functionality.\n   */\n  async function handleEditClick() {\n    if (isEdit) {\n      await handleUpdate({ title: tempTitle, priority: tempPriority, isCompleted: completed }); // Include completion status when updating\n    }\n    setIsEdit(!isEdit);\n  }\n\n  /**\n   * Handles the delete action for a todo item.\n   */\n  async function handleDelete() {\n    try {\n      await fetch(`http://localhost:3000/${id}`, {\n        method: 'DELETE',\n      });\n      await fetchData(); // refetch data as the todo item is deleted\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Updates the todo item with the provided data.\n   * @param {object} updatedTodo - The updated todo object.\n   * @returns {Promise<void>} - A promise that resolves when the update is complete.\n   */\n  async function handleUpdate(updatedTodo) {\n    try {\n      await fetch(`http://localhost:3000/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedTodo),\n      });\n      setTodo({ ...todo, ...updatedTodo });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className={`todo ${completed ? 'completed' : ''}`}> {/* Apply 'completed' class when completed */}\n      <div className='todo__items'>\n        <TodoCheckbox\n          isCompleted={todo?.isCompleted}\n          handleUpdate={(value) => {\n            setCompleted(value); // Update completion status\n            handleUpdate({ ...todo, isCompleted: value }); // Update todo item with completion status\n          }}\n        />\n        {isEdit ? (\n          <TodoInput title={tempTitle} handleInputChange={handleInputChange} />\n        ) : (\n          <TodoTitle title={todo?.title} />\n        )}\n        {/* Display priority when editing or not */}\n        {isEdit || <span className={`priority ${tempPriority}`}>Priority: {tempPriority}</span>}\n      </div>\n      <div className='todo__buttons'>\n        <Button\n          className={isEdit ? 'btn-success' : 'btn-info'}\n          onClick={handleEditClick}\n        >\n          {isEdit ? 'Submit' : 'Edit'}\n        </Button>\n        <Button className='btn-danger' onClick={handleDelete} disabled={isEdit}>\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}