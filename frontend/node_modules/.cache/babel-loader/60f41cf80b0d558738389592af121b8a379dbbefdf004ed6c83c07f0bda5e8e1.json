{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FAISA\\\\OneDrive\\\\Desktop\\\\CS336\\\\lab9-FaisalAziz1241\\\\frontend\\\\src\\\\components\\\\Todo\\\\TranslateComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const translateText = async (textToTranslate, targetLanguage, apiKey) => {\n  try {\n    const response = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\n      params: {\n        q: textToTranslate,\n        target: targetLanguage,\n        key: apiKey\n      }\n    });\n    return response.data.data.translations[0].translatedText;\n  } catch (error) {\n    console.error('Error translating text:', error);\n    return textToTranslate;\n  }\n};\nconst TranslateComponent = ({\n  text,\n  setOriginalText,\n  apiKey\n}) => {\n  _s();\n  const [clickCount, setClickCount] = useState(0);\n  const handleTranslationClick = async () => {\n    const targetLanguage = clickCount % 2 === 0 ? 'ar' : 'en'; // English on odd clicks, Arabic on even clicks\n    const translatedText = await translateText(text, targetLanguage, apiKey);\n    setOriginalText(translatedText);\n    setClickCount(clickCount + 1); // Increment click count\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleTranslationClick,\n    children: clickCount % 2 === 0 ? 'Translate to Arabic' : 'Translate to English'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TranslateComponent, \"lP0RdHHRli8a2nfaqf9UO7BUSv0=\");\n_c = TranslateComponent;\nexport default TranslateComponent;\nvar _c;\n$RefreshReg$(_c, \"TranslateComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","translateText","textToTranslate","targetLanguage","apiKey","response","post","params","q","target","key","data","translations","translatedText","error","console","TranslateComponent","text","setOriginalText","_s","clickCount","setClickCount","handleTranslationClick","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/FAISA/OneDrive/Desktop/CS336/lab9-FaisalAziz1241/frontend/src/components/Todo/TranslateComponent.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const translateText = async (textToTranslate, targetLanguage, apiKey) => {\r\n  try {\r\n    const response = await axios.post(\r\n      'https://translation.googleapis.com/language/translate/v2',\r\n      {},\r\n      {\r\n        params: {\r\n          q: textToTranslate,\r\n          target: targetLanguage,\r\n          key: apiKey\r\n        }\r\n      }\r\n    );\r\n    return response.data.data.translations[0].translatedText;\r\n  } catch (error) {\r\n    console.error('Error translating text:', error);\r\n    return textToTranslate;\r\n  }\r\n};\r\n\r\nconst TranslateComponent = ({ text, setOriginalText, apiKey }) => {\r\n  const [clickCount, setClickCount] = useState(0);\r\n\r\n  const handleTranslationClick = async () => {\r\n    const targetLanguage = clickCount % 2 === 0 ? 'ar' : 'en'; // English on odd clicks, Arabic on even clicks\r\n    const translatedText = await translateText(text, targetLanguage, apiKey);\r\n    setOriginalText(translatedText);\r\n    setClickCount(clickCount + 1); // Increment click count\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleTranslationClick}>\r\n      {clickCount % 2 === 0 ? 'Translate to Arabic' : 'Translate to English'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TranslateComponent;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,eAAe,EAAEC,cAAc,EAAEC,MAAM,KAAK;EAC9E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/B,0DAA0D,EAC1D,CAAC,CAAC,EACF;MACEC,MAAM,EAAE;QACNC,CAAC,EAAEN,eAAe;QAClBO,MAAM,EAAEN,cAAc;QACtBO,GAAG,EAAEN;MACP;IACF,CACF,CAAC;IACD,OAAOC,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAACC,cAAc;EAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAOZ,eAAe;EACxB;AACF,CAAC;AAED,MAAMc,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,eAAe;EAAEd;AAAO,CAAC,KAAK;EAAAe,EAAA;EAChE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMyB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMnB,cAAc,GAAGiB,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IAC3D,MAAMP,cAAc,GAAG,MAAMZ,aAAa,CAACgB,IAAI,EAAEd,cAAc,EAAEC,MAAM,CAAC;IACxEc,eAAe,CAACL,cAAc,CAAC;IAC/BQ,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,oBACEpB,OAAA;IAAQuB,OAAO,EAAED,sBAAuB;IAAAE,QAAA,EACrCJ,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,qBAAqB,GAAG;EAAsB;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEb,CAAC;AAACT,EAAA,CAfIH,kBAAkB;AAAAa,EAAA,GAAlBb,kBAAkB;AAiBxB,eAAeA,kBAAkB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}