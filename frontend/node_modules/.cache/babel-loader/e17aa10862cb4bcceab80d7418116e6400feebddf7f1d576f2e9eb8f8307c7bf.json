{"ast":null,"code":"var _jsxFileName = \"/Users/porterrunyon-trapp/CS333/final-project/Final-cs333/frontend/src/components/Todo/TranslateComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranslateComponent = ({\n  text,\n  setOriginalText,\n  apiKey\n}) => {\n  _s();\n  const [isTranslating, setIsTranslating] = useState(false);\n  const translate = async (textToTranslate, targetLanguage) => {\n    setIsTranslating(true); // Indicate that translation is in progress\n    try {\n      const response = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\n        params: {\n          q: textToTranslate,\n          target: targetLanguage,\n          key: apiKey\n        }\n      });\n      setIsTranslating(false); // Translation is done\n      return response.data.data.translations[0].translatedText;\n    } catch (error) {\n      console.error('Error translating text:', error);\n      setIsTranslating(false); // Translation is done, even if it failed\n      return '';\n    }\n  };\n  const handleTranslationClick = async () => {\n    if (!isTranslating) {\n      // Prevent double-clicks during an ongoing translation\n      const targetLanguage = 'ar'; // Arabic is the target language\n      const translatedText = await translate(text, targetLanguage);\n      setOriginalText(translatedText); // This should trigger the update in the parent component\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleTranslationClick,\n    disabled: isTranslating,\n    children: isTranslating ? 'Translating...' : 'Translate to Arabic'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TranslateComponent, \"58S43IGNyKrNLkXhBCbLxeTdFZQ=\");\n_c = TranslateComponent;\nexport default TranslateComponent;\nvar _c;\n$RefreshReg$(_c, \"TranslateComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TranslateComponent","text","setOriginalText","apiKey","_s","isTranslating","setIsTranslating","translate","textToTranslate","targetLanguage","response","post","params","q","target","key","data","translations","translatedText","error","console","handleTranslationClick","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/porterrunyon-trapp/CS333/final-project/Final-cs333/frontend/src/components/Todo/TranslateComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TranslateComponent = ({ text, setOriginalText, apiKey }) => {\n  const [isTranslating, setIsTranslating] = useState(false);\n\n  const translate = async (textToTranslate, targetLanguage) => {\n    setIsTranslating(true); // Indicate that translation is in progress\n    try {\n      const response = await axios.post(\n        'https://translation.googleapis.com/language/translate/v2',\n        {},\n        {\n          params: {\n            q: textToTranslate,\n            target: targetLanguage,\n            key: apiKey,\n          },\n        }\n      );\n      setIsTranslating(false); // Translation is done\n      return response.data.data.translations[0].translatedText;\n    } catch (error) {\n      console.error('Error translating text:', error);\n      setIsTranslating(false); // Translation is done, even if it failed\n      return '';\n    }\n  };\n\n  const handleTranslationClick = async () => {\n    if (!isTranslating) { // Prevent double-clicks during an ongoing translation\n      const targetLanguage = 'ar'; // Arabic is the target language\n      const translatedText = await translate(text, targetLanguage);\n      setOriginalText(translatedText); // This should trigger the update in the parent component\n    }\n  };\n\n  return (\n    <button onClick={handleTranslationClick} disabled={isTranslating}>\n      {isTranslating ? 'Translating...' : 'Translate to Arabic'}\n    </button>\n  );\n};\n\nexport default TranslateComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,eAAe;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMW,SAAS,GAAG,MAAAA,CAAOC,eAAe,EAAEC,cAAc,KAAK;IAC3DH,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,0DAA0D,EAC1D,CAAC,CAAC,EACF;QACEC,MAAM,EAAE;UACNC,CAAC,EAAEL,eAAe;UAClBM,MAAM,EAAEL,cAAc;UACtBM,GAAG,EAAEZ;QACP;MACF,CACF,CAAC;MACDG,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB,OAAOI,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAACC,cAAc;IAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cb,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAMe,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAAChB,aAAa,EAAE;MAAE;MACpB,MAAMI,cAAc,GAAG,IAAI,CAAC,CAAC;MAC7B,MAAMS,cAAc,GAAG,MAAMX,SAAS,CAACN,IAAI,EAAEQ,cAAc,CAAC;MAC5DP,eAAe,CAACgB,cAAc,CAAC,CAAC,CAAC;IACnC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAQuB,OAAO,EAAED,sBAAuB;IAACE,QAAQ,EAAElB,aAAc;IAAAmB,QAAA,EAC9DnB,aAAa,GAAG,gBAAgB,GAAG;EAAqB;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEb,CAAC;AAACxB,EAAA,CAvCIJ,kBAAkB;AAAA6B,EAAA,GAAlB7B,kBAAkB;AAyCxB,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}