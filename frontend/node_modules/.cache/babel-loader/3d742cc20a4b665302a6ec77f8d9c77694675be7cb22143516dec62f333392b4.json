{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FAISA\\\\OneDrive\\\\Desktop\\\\CS336\\\\lab9-FaisalAziz1241\\\\frontend\\\\src\\\\components\\\\Todos\\\\Todos.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { Todo } from '../Todo/Todo';\nimport { CreateTodo } from './CreateTodo';\n\n/**\r\n * Renders the Todos component.\r\n * @returns {JSX.Element} The rendered Todos component.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todos = () => {\n  _s();\n  const [todoIds, setTodoIds] = useState([]);\n\n  /**\r\n   * Fetches data from the specified URL and sets the todo IDs.\r\n   * @returns {Promise<void>} A promise that resolves when the data is fetched and the todo IDs are set.\r\n   */\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:3000');\n      const jsonResponse = await response.json();\n      setTodoIds(jsonResponse);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  /**\r\n   * Handles the creation of a new todo.\r\n   * @param {Object} newTodo - The new todo object to be created.\r\n   * @returns {Promise<void>} - A promise that resolves when the creation is complete.\r\n   */\n  const handleCreate = useCallback(async newTodo => {\n    try {\n      await fetch(\"http://localhost:3000\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTodo)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    await fetchData();\n  }, [fetchData]);\n\n  // intial fetch\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateTodo, {\n      handleCreate: handleCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), todoIds.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No todos to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoIds.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Todo, {\n          id: todo._id,\n          fetchData: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n/* CHALLENGE: Add a the sum of remaining todos to a footer. */\n_s(Todos, \"R/BvmJZN2oAPVplw/yb+/2g4DWA=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useCallback","useEffect","useState","Todo","CreateTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","Todos","_s","todoIds","setTodoIds","fetchData","response","fetch","jsonResponse","json","error","console","log","handleCreate","newTodo","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","todo","id","_id","_c","$RefreshReg$"],"sources":["C:/Users/FAISA/OneDrive/Desktop/CS336/lab9-FaisalAziz1241/frontend/src/components/Todos/Todos.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { Todo } from '../Todo/Todo'\r\nimport { CreateTodo } from './CreateTodo'\r\n\r\n/**\r\n * Renders the Todos component.\r\n * @returns {JSX.Element} The rendered Todos component.\r\n */\r\nconst Todos = () => {\r\n  const [ todoIds, setTodoIds ] = useState([])\r\n\r\n  /**\r\n   * Fetches data from the specified URL and sets the todo IDs.\r\n   * @returns {Promise<void>} A promise that resolves when the data is fetched and the todo IDs are set.\r\n   */\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000')\r\n      const jsonResponse = await response.json()\r\n      setTodoIds(jsonResponse)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },[])\r\n\r\n  /**\r\n   * Handles the creation of a new todo.\r\n   * @param {Object} newTodo - The new todo object to be created.\r\n   * @returns {Promise<void>} - A promise that resolves when the creation is complete.\r\n   */\r\n  const handleCreate = useCallback(async (newTodo) => {\r\n    try {\r\n      await fetch(\"http://localhost:3000\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newTodo),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    await fetchData();\r\n  }, [fetchData]);\r\n\r\n  // intial fetch\r\n  useEffect(() => {\r\n    fetchData()\r\n  },[fetchData])\r\n\r\n  return (\r\n    <>\r\n      <CreateTodo handleCreate={handleCreate} />\r\n      {todoIds.length === 0 && <p>No todos to display</p>}\r\n      <ul>\r\n        {todoIds.map(todo => (\r\n          <li key={todo._id}>\r\n            <Todo id={todo._id} fetchData={fetchData} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\n/* CHALLENGE: Add a the sum of remaining todos to a footer. */\r\n\r\nexport default Todos\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAAEC,OAAO,EAAEC,UAAU,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE5C;AACF;AACA;AACA;EACE,MAAMW,SAAS,GAAGb,WAAW,CAAC,YAAY;IACxC,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACrD,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1CL,UAAU,CAACI,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,EAAC,EAAE,CAAC;;EAEL;AACF;AACA;AACA;AACA;EACE,MAAMG,YAAY,GAAGrB,WAAW,CAAC,MAAOsB,OAAO,IAAK;IAClD,IAAI;MACF,MAAMP,KAAK,CAAC,uBAAuB,EAAE;QACnCQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;IACA,MAAML,SAAS,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACAZ,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,CAACA,SAAS,CAAC,CAAC;EAEd,oBACEP,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA,CAACF,UAAU;MAACiB,YAAY,EAAEA;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCrB,OAAO,CAACsB,MAAM,KAAK,CAAC,iBAAI3B,OAAA;MAAAsB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnD1B,OAAA;MAAAsB,QAAA,EACGjB,OAAO,CAACuB,GAAG,CAACC,IAAI,iBACf7B,OAAA;QAAAsB,QAAA,eACEtB,OAAA,CAACH,IAAI;UAACiC,EAAE,EAAED,IAAI,CAACE,GAAI;UAACxB,SAAS,EAAEA;QAAU;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADrCG,IAAI,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;;AAED;AAAAtB,EAAA,CAvDMD,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAyDX,eAAeA,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}